@model IEnumerable<WebApplication2.Models.BookModels>


@{
    ViewBag.Title = "图书管理";
    
}

<h2>图书管理</h2>
<p>
    @Html.ActionLink("新建图书", "New", "Book", null, new { @class = "btn btn-primary" })
</p>

<table id="books" class="table table-bordered table-hover">
    <thead>
        <tr>
            <th>书名</th>
            <th>作者</th>
            <th>简介</th>
            <th>操作</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

@section scripts
{
    <script>
        $(() => {
            var table = $("#books").DataTable({
                "language": {
                    "processing": "处理中...",
                    "loadingRecords": "载入中...",
                    "lengthMenu": "显示 _MENU_ 项结果",
                    "zeroRecords": "没有符合的结果果",
                    "info": "显示第 _START_ 到 _END_ 项结果，共 _TOTAL_ 项",
                    "infoEmpty": "显示第 0 到 0 项结果，共 0 项",
                    "infoFiltered": "(从 _MAX_ 项目结果中过滤)",
                    "infoPostFix": "",
                    "search": "搜索:",
                    "paginate": {
                        "first": "第一页",
                        "previous": "上一页",
                        "next": "下一页",
                        "last": "最后一页"
                    },
                    "aria": {
                        "sortAscending": ": 升序排列",
                        "sortDescending": ": 降序排列"
                    }
                },
                ajax: {
                    url: "/api/book/",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "name",
                        className: "align-middle",
                        render: function (data, type, book) {
                            return "<a href='/book/edit/" + book.id + "'>" + book.title + "</a>";
                        }
                    },
                    {
                        data: "author",
                        className: "align-middle",

                    },
                    {
                        data: "description",
                        className: "align-middle",

                    },
                    {
                        data: "id",
                        className: "align-middle",
                        render: function (data) {
                            return "<button class='btn btn-danger delete-link' data-book-id=" + data + ">删除</button>";
                        }
                    }
                ]
            });

            $("#books").on("click", ".delete-link", function () {
                var button = $(this)
                bootbox.confirm({
                    closeButton: false,
                    centerVertical: true,
                    title: "警告！",
                    message: "确定删除该用户？",
                    locale: "zh_CN",
                    buttons: {
                        cancel: {
                            className: 'btn btn-light',
                        },
                        confirm: {
                            className: 'btn btn-outline-danger',
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                url: "/api/book/" + button.attr("data-book-id"),
                                method: "DELETE",
                                success: function () {
                                    table.row(button.parents("tr")).remove().draw();
                                    //this method may not delete the recent tr so we need to redraw it.
                                    //button.parents("tr").remove();
                                },
                                error: function (xhr, textStatus, errorThrown) {
                                    console.log("Error: " + errorThrown);
                                }
                            })
                        }
                    }
                });
            });
        });
    </script>
}